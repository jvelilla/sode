note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class SOD_IMG_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	h: INTEGER
			-- Access member `h`
		require
			exists: exists
		do
			Result := c_h (item)
		ensure
			result_correct: Result = c_h (item)
		end

	set_h (a_value: INTEGER) 
			-- Change the value of member `h` to `a_value`.
		require
			exists: exists
		do
			set_c_h (item, a_value)
		ensure
			h_set: a_value = h
		end

	w: INTEGER
			-- Access member `w`
		require
			exists: exists
		do
			Result := c_w (item)
		ensure
			result_correct: Result = c_w (item)
		end

	set_w (a_value: INTEGER) 
			-- Change the value of member `w` to `a_value`.
		require
			exists: exists
		do
			set_c_w (item, a_value)
		ensure
			w_set: a_value = w
		end

	c: INTEGER
			-- Access member `c`
		require
			exists: exists
		do
			Result := c_c (item)
		ensure
			result_correct: Result = c_c (item)
		end

	set_c (a_value: INTEGER) 
			-- Change the value of member `c` to `a_value`.
		require
			exists: exists
		do
			set_c_c (item, a_value)
		ensure
			c_set: a_value = c
		end

	data: POINTER
			-- Access member `data`
		require
			exists: exists
		do
			Result := c_data (item)
		ensure
			result_correct: Result = c_data (item)
		end

	set_data (a_value: POINTER) 
			-- Change the value of member `data` to `a_value`.
		require
			exists: exists
		do
			set_c_data (item, a_value)
		ensure
			data_set: a_value = data
		end

feature {NONE} -- Implementation wrapper for struct struct sod_img

	sizeof_external: INTEGER 
		external
			"C inline use <sod.h>"
		alias
			"sizeof(struct sod_img)"
		end

	c_h (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sod.h>"
		alias
			"[
				((struct sod_img*)$an_item)->h
			]"
		end

	set_c_h (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sod.h>"
		alias
			"[
				((struct sod_img*)$an_item)->h =  (int)$a_value
			]"
		ensure
			h_set: a_value = c_h (an_item)
		end

	c_w (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sod.h>"
		alias
			"[
				((struct sod_img*)$an_item)->w
			]"
		end

	set_c_w (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sod.h>"
		alias
			"[
				((struct sod_img*)$an_item)->w =  (int)$a_value
			]"
		ensure
			w_set: a_value = c_w (an_item)
		end

	c_c (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sod.h>"
		alias
			"[
				((struct sod_img*)$an_item)->c
			]"
		end

	set_c_c (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sod.h>"
		alias
			"[
				((struct sod_img*)$an_item)->c =  (int)$a_value
			]"
		ensure
			c_set: a_value = c_c (an_item)
		end

	c_data (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sod.h>"
		alias
			"[
				((struct sod_img*)$an_item)->data
			]"
		end

	set_c_data (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sod.h>"
		alias
			"[
				((struct sod_img*)$an_item)->data =  (float*)$a_value
			]"
		ensure
			data_set: a_value = c_data (an_item)
		end

end
